// Generated by CoffeeScript 1.9.1
(function() {
  var TabShepherd, chrome;

  require("./shoulda.js");

  global.extend = function(hash1, hash2) {
    var key;
    for (key in hash2) {
      hash1[key] = hash2[key];
    }
    hash1;
    return extend(global, require("./chromeStubs.js"));
  };

  TabShepherd = require("./TabShepherd.js").TabShepherd;

  chrome = {
    storage: {
      get: function() {},
      set: function(defs) {}
    },
    omnibox: {
      onInputChanged: {
        addListener: function(listener) {
          return this.inputChangedListener = listener;
        }
      },
      onInputEntered: {
        addListener: function(listener) {
          return this.inputEnteredListener = listener;
        }
      }
    },
    windows: {
      onRemoved: {
        addListener: function(f) {}
      },
      getCurrent: function() {},
      create: function() {}
    },
    tabs: {
      query: function() {}
    },
    runtime: {
      lastError: null
    }
  };

  context("Commands", should("initialize", function() {
    var ts;
    assert.equal('function', typeof TabShepherd);
    ts = new TabShepherd(chrome.storage, chrome.omnibox, chrome.windows, chrome.tabs, chrome.runtime);
    assert.equal('object', typeof ts);
    return assert.isTrue(chrome.omnibox.inputChangedListener != null);
  }));

  Tests.run();

}).call(this);
